# Makefile.in generated by automake 1.10 from Makefile.am.
# emacs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#   Copyright (C) 2007, 2008 Rocky Bernstein rocky@gnu.org
#
#   This program is free software; you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free
#   Software Foundation; either version 2, or (at your option) any later
#   version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT ANY
#   WARRANTY; without even the implied warranty of MERCHANTABILITY or
#   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#   for more details.
#
#   You should have received a copy of the GNU General Public License along
#   with Bash; see the file COPYING.  If not, write to the Free Software
#   Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
#$Id: Makefile.am,v 1.10 2007/04/13 00:59:33 rockyb Exp $


pkgdatadir = $(datadir)/ruby-debug-extra
pkglibdir = $(libdir)/ruby-debug-extra
pkgincludedir = $(includedir)/ruby-debug-extra
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = emacs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(lispdir)"
lispLISP_INSTALL = $(INSTALL_DATA)
LISP = $(lisp_LISP)
am__ELFILES = rdebug-annotate.el rdebug-breaks.el rdebug-cmd.el \
	rdebug-core.el rdebug-dbg.el rdebug-error.el rdebug-fns.el \
	rdebug-frames.el rdebug-gud.el rdebug-help.el rdebug-info.el \
	rdebug-layouts.el rdebug-locring.el rdebug-output.el \
	rdebug-regexp.el rdebug-secondary.el rdebug-shortkey.el \
	rdebug-source.el rdebug-track.el rdebug-varbuf.el \
	rdebug-vars.el rdebug-watch.el rdebug.el
am__ELCFILES = $(am__ELFILES:.el=.elc)
elisp_comp = $(top_srcdir)/elisp-comp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/missing --run tar
AUTOCONF = ${SHELL} /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/missing --run automake-1.10
AWK = gawk
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"ruby-debug-extra\" -DPACKAGE_TARNAME=\"ruby-debug-extra\" -DPACKAGE_VERSION=\"0.10.1\" -DPACKAGE_STRING=\"ruby-debug-extra\ 0.10.1\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"ruby-debug-extra\" -DVERSION=\"0.10.1\"
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EMACS = emacs
EMACSLOADPATH = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
PACKAGE = ruby-debug-extra
PACKAGE_BUGREPORT = 
PACKAGE_NAME = ruby-debug-extra
PACKAGE_STRING = ruby-debug-extra 0.10.1
PACKAGE_TARNAME = ruby-debug-extra
PACKAGE_VERSION = 0.10.1
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.10.1
abs_builddir = /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/emacs
abs_srcdir = /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/emacs
abs_top_builddir = /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1
abs_top_srcdir = /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1
am__leading_dot = .
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/ignacy/.emacs.d/ruby-debug-extra-0.10.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
lispdir = ${datarootdir}/emacs/site-lisp
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
lisp_files = rdebug.el \
	     rdebug-annotate.el	\
	     rdebug-breaks.el 	\
	     rdebug-cmd.el 	\
	     rdebug-core.el 	\
	     rdebug-dbg.el 	\
	     rdebug-error.el 	\
	     rdebug-fns.el 	\
	     rdebug-frames.el 	\
	     rdebug-gud.el 	\
	     rdebug-help.el 	\
	     rdebug-info.el 	\
	     rdebug-layouts.el	\
	     rdebug-locring.el	\
	     rdebug-output.el 	\
             rdebug-regexp.el	\
	     rdebug-secondary.el\
	     rdebug-shortkey.el \
	     rdebug-source.el	\
	     rdebug-track.el 	\
	     rdebug-varbuf.el   \
	     rdebug-vars.el 	\
	     rdebug-watch.el

check_DATA = test/elk-test.el	\
	test/test-annotate.el  	\
	test/test-cmd.el    	\
	test/test-core.el   	\
	test/test-fns.el   	\
	test/test-gud.el   	\
	test/test-indent.el 	\
	test/test-regexp.el 	\
	test/test-shortkey.el

EXTRA_DIST = $(lisp_files) $(check_DATA)
ELCFILES = rdebug.elc 		\
	     rdebug-annotate.elc	\
	     rdebug-breaks.elc 		\
	     rdebug-cmd.elc 		\
	     rdebug-core.elc 		\
	     rdebug-dbg.elc 		\
	     rdebug-error.elc		\
	     rdebug-fns.elc		\
	     rdebug-gud.elc 		\
	     rdebug-frames.elc 		\
	     rdebug-help.elc 		\
	     rdebug-info.elc 		\
	     rdebug-layouts.elc		\
	     rdebug-locring.elc		\
	     rdebug-output.elc 		\
             rdebug-regexp.elc		\
	     rdebug-secondary.elc	\
	     rdebug-shortkey.elc	\
	     rdebug-source.elc		\
	     rdebug-track.elc 		\
	     rdebug-varbuf.elc 		\
	     rdebug-vars.elc 		\
	     rdebug-watch.elc

lisp_LISP = $(lisp_files)
CHECK_FILES = \
	check-annotate \
	check-cmd \
	check-core \
	check-fns \
	check-frames \
	check-gud \
	check-indent \
	check-regexp \
	check-shortkey

PHONY = $(CHECK_FILES)
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  emacs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  emacs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

elc-stamp: $(LISP)
	@echo 'WARNING: Warnings can be ignored. :-)'
	@rm -f elc-temp && touch elc-temp
	if test "$(EMACS)" != no; then \
	  set x; \
	  list='$(LISP)'; for p in $$list; do \
	    if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	    set x "$$@" "$$d$$p"; shift; \
	  done; \
	  shift; \
	  EMACS="$(EMACS)" $(SHELL) $(elisp_comp) "$$@" || exit 1; \
	else : ; fi
	@mv -f elc-temp $@
$(am__ELCFILES): elc-stamp
	@if test "$(EMACS)" != no && test ! -f $@; then \
	  trap 'rm -rf elc-lock elc-stamp' 1 2 13 15; \
	  if mkdir elc-lock 2>/dev/null; then \
	    rm -f elc-stamp; \
	    $(MAKE) $(AM_MAKEFLAGS) elc-stamp; \
	    rmdir elc-lock; \
	  else \
	    while test -d elc-lock; do sleep 1; done; \
	    test -f elc-stamp; exit $$?; \
	  fi; \
	else : ; fi
install-lispLISP: $(lisp_LISP) $(ELCFILES)
	@$(NORMAL_INSTALL)
	@if test "$(EMACS)" != no; then \
	  test -z "$(lispdir)" || $(MKDIR_P) "$(DESTDIR)$(lispdir)"; \
	  list='$(lisp_LISP)'; for p in $$list; do \
	    if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	    f=$(am__strip_dir) \
	    echo " $(lispLISP_INSTALL) '$$d$$p' '$(DESTDIR)$(lispdir)/$$f'"; \
	    $(lispLISP_INSTALL) "$$d$$p" "$(DESTDIR)$(lispdir)/$$f"; \
	    if test -f $${p}c; then \
	      echo " $(lispLISP_INSTALL) '$${p}c' '$(DESTDIR)$(lispdir)/$${f}c'"; \
	      $(lispLISP_INSTALL) "$${p}c" "$(DESTDIR)$(lispdir)/$${f}c"; \
	    else : ; fi; \
	  done; \
	else : ; fi

uninstall-lispLISP:
	@$(NORMAL_UNINSTALL)
	@if test "$(EMACS)" != no; then \
	  list='$(lisp_LISP)'; for p in $$list; do \
	    f=$(am__strip_dir) \
	    echo " rm -f '$(DESTDIR)$(lispdir)/$$f' '$(DESTDIR)$(lispdir)/$${f}c'"; \
	    rm -f "$(DESTDIR)$(lispdir)/$$f" "$(DESTDIR)$(lispdir)/$${f}c"; \
	  done; \
	else : ; fi

clean-lisp:
	-rm -f elc-stamp $(ELCFILES)
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_DATA)
check: check-am
all-am: Makefile $(LISP) $(ELCFILES)
installdirs:
	for dir in "$(DESTDIR)$(lispdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-lisp mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-lispLISP

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-lispLISP

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-lisp \
	distclean distclean-generic distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-lispLISP install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am uninstall uninstall-am uninstall-lispLISP


check: $(CHECK_FILES)

check-annotate: rdebug-annotate.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-annotate.el )

check-cmd: rdebug-gud.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-cmd.el )

check-core: rdebug-core.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-core.el )

check-fns: rdebug-fns.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-fns.el )

check-frames: rdebug-frames.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-frames.el )

check-gud: rdebug-gud.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-gud.el )

check-indent: $(lisp_files)
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-indent.el )

check-regexp: rdebug-regexp.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-regexp.el )

check-shortkey: rdebug-shortkey.el
	(cd $(srcdir)/test && \
	$(EMACS) -batch -q -l test-shortkey.el )

test: check
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
