(global-set-key [(control h)] 'delete-backward-char)

;; This are key bindings that I use
(defmacro bind (key fn)
  "shortcut for global-set-key"
  `(global-set-key (kbd ,key)
                   ;; handle unquoted function names and lambdas
                   ,(if (listp fn)
                        fn
                      `',fn)))

(setq mac-option-key-is-meta nil)
(setq mac-command-key-is-meta t)
(setq mac-command-modifier 'meta)
(setq mac-option-modifier nil)


(bind "C-=" 'er/expand-region)
(bind "C-c f" 'ns-toggle-fullscreen)
(bind "C-c d" 'deft)
(autoload 'zap-up-to-char "misc"
  "Kill up to, but not including ARGth occurrence of CHAR.")
(global-set-key (kbd "M-Z") 'zap-up-to-char)
(bind "M-z" 'undo)
(define-key isearch-mode-map (kbd "C-o") 'isearch-occur)
(bind "C-c n" 'clean-up-buffer-or-region)
(bind "C-c a" 'ack)
(bind "C-c p" 'defunkt-duplicate-line)
(bind "C-c r" 'rspec-verify-single)
(bind "C-c m" 'mu4e)
;;(bind "<f5>" 'im/ant)
(bind "C-x C-i" 'imenu)
(bind "C-x C-r" 'ido-recentf-open)
(bind "C-c C-d" 'im/diff-current-buffer-with-disk)
(bind "C-q" 'jw-run-test-or-spec-file)
(bind "C-c l" 'goto-line)
(bind "M-s-/" 'align)
(bind "C-l" 'recenter)
(bind "M-h" 'backward-kill-word)
(bind "C-x C-o" 'other-window)
(bind "C-x C-1" 'delete-other-windows)

(bind "C-S-o" 'move-line-up)
(bind "C-o" 'open-line-above)
(bind "C-S-j" 'move-line-down)
(bind "C-j" 'newline-and-indent)
(bind "C-a" 'back-to-indentation)
(bind "C-x C-f" 'ido-find-file)
;;(bind "C-x f" 'textmate-goto-file)
(bind "C-x t" 'jao-toggle-selective-display)
(bind "C-x f" 'projectile-find-file)
(bind "C-x i" 'yas/insert-snippet)
(bind "C-x C-p" 'find-file-at-point)
(global-set-key (kbd "C-c q") 'join-line)
(bind "C-3" 'split-window-horizontally)
(bind "C-2" 'split-window-vertically)
(bind "C-1" 'switch-to-zsh)
(bind "C-M-s" 'isearch-other-window)
(bind "M-," 'tagos-loop-continues-search)
(bind "M-?" 'tags-loop-continue)
(bind "C-x k" 'im/kill-current-buffer)
(bind "M-%" 'replace-regexp)
(bind "M-\\" 'jump-to-mark)
(bind "C-\\" 'push-mark-no-activate)
(bind "M-s" 'tags-search)
(bind "C-'" 'textmate-goto-symbol)
(bind "C-<tab>" 'switch-to-previous-buffer)
(bind "C-x C-b" 'ido-switch-buffer)
(bind "M-g" 'goto-line-with-feedback)
(bind "C-x b" 'ibuffer-bs-show)
(bind "<f11>" 'switch-full-screen)
(bind "M-/" 'hippie-expand)
(bind "M-l" 'highlight-lines-matching-regexp)
(bind "M-p" 'smart-symbol-go-backward)
(bind "M-n" 'smart-symbol-go-forward)

(bind "<f1>" 'help)
(bind "C-x C-x" 'clipboard-kill-region)
(bind "M-u" 'toggle-letter-case)
(bind "C-." 'my-ido-find-tag)
(bind "C-i" 'indent-for-tab-command)
(bind "C-c w" 'whitespace-cleanup)

(bind "S-<left>" 'shrink-window-horizontally)
(bind "S-<right>" 'enlarge-window-horizontally)
(bind "S-<up>" 'shrink-window)
(bind "S-<down>" 'enlarge-window)

(global-set-key (kbd "C-w") 'kill-region-or-backward-kill-word)

(add-hook 'sgml-mode-hook
          (lambda ()
            (require 'rename-sgml-tag)
            (define-key sgml-mode-map (kbd "C-c C-r") 'rename-sgml-tag)))

(keyboard-translate ?\C-h ?\C-?)
(global-unset-key (kbd "C-x 3"))
(global-unset-key (kbd "C-x 2"))

(global-set-key [(control backspace)] 'backward-kill-word)
(global-set-key [(meta delete)] 'backward-kill-word)
(bind "C-x q" 'bookmark-set)
(bind "C-x j" 'bookmark-jump)
(bind "C-x g" 'magit-status)
(define-key global-map (kbd "C-+") 'text-scale-increase)
(define-key global-map (kbd "C--") 'text-scale-decrease)

(global-unset-key (kbd "<backspace>"))
(global-unset-key (kbd "RET"))

(global-unset-key (kbd "<up>"))
(global-unset-key (kbd "<down>"))
(global-unset-key (kbd "<left>"))
(global-unset-key (kbd "<right>"))

(bind "<up>" 'scroll-n-lines-behind)
(bind "<down>" 'scroll-n-lines-ahead)

(provide 'im-keys)
